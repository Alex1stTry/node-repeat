{
  "swagger": "2.0",
  "info": {
    "description": "This api is for testing the swagger ui",
    "version": "1.0.7",
    "title": "Express API",
    "contact": {
      "email": "test@gmail.com"
    }
  },
  "tags": [
    {
      "name": "users",
      "description": "Operations about user"
    },
    {
      "name": "auth",
      "description": "Operations such as register,login-in/out,add-avatar,operations with password,verify and refresh tokens"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "paths": {
    "/users": {
      "get": {
        "tags": ["users"],
        "summary": "Get all users",
        "description": "This can do everybody",
        "operationId": "get all verified users",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Operation success"
          }
        }
      }
    },
    "/users/me": {
      "get": {
        "tags": ["users"],
        "summary": "Get me",
        "description": "This can only be done by the logged in user.",
        "operationId": "getMyUser",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "security": [{"jwt_token": []}],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UserPrivateResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "tags": ["users"],
        "summary": "Update me",
        "description": "This can only be done by the logged in user.",
        "operationId": "updateMyUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "security": [{"jwt_token": []}],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateUserDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "Delete user",
        "description": "This can only be done by the logged in user.",
        "operationId": "deleteUser",
        "security": [{"jwt_token": []}],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The name that needs to be deleted",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid username supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/users/me/add-avatar": {
      "post": {
        "tags": ["users"],
        "summary": "Add avatar to user",
        "description": "This action can do only logged user",
        "operationId": "add avatar",
        "security": [{
          "jwt_token": []
        }],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "bearerAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "Enter 'Bearer' [space] and then your token in the text input below"
    }
  },
  "definitions": {
    "UpdateUserDTO": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Updated name in the system",
          "type": "string"
        },
        "phone": {
          "description": "Updated phone number in the system",
          "type": "string"
        },
        "age": {
          "description": "Age in years",
          "type": "number"
        }
      }
    },
    "TokensResponse": {
      "type": "object",
      "required": ["accessToken","refreshTokens"],
      "properties": {
        "accessToken": {
          "type": "string"
        },
        "refreshToken": {
          "type": "string"}
      }
    },
    "LoginResponse": {
      "type": "object",
      "required": ["user","tokens"],
      "properties": {
        "user": {
          "type": "object",
          "$ref": "#/definitions/UserPrivateResponse"
        },
        "tokens": {
          "type": "object",
          "$ref": "#/definitions/TokensResponse"
        }
      }
    },
    "UserPublicResponse": {
      "type": "object",
      "required": ["_id","name","age","avatar"],
      "properties": {
        "_id": {
          "type": "string",
          "format": "uuid",
          "description": "Unique identifier for user"
        },
        "name": {
          "type": "string"
        },
        "age": {
          "type": "number"
        },
        "avatar": {
          "type": "string",
          "description": "Link to user avatar"
        }
      }
    },
    "UserPrivateResponse": {
      "type": "object",
      "required": ["_id","name","email","email","avatar"],
      "properties": {
        "_id": {
          "type": "string",
          "format": "uuid",
          "description": "Unique identifier for user"
        },
        "name": {
          "type": "string"
        },
        "age": {
          "type": "number"
        },
        "avatar": {
          "type": "string",
          "description": "Link to user avatar"
        },
        "email": {
          "type": "string"
        }
      }
    }
  }
}
